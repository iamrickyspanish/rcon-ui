{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/app/src/Command/Form.jsx\";\n\nimport React from \"react\";\nimport { Box, Form, FormField, TextInput } from \"grommet\";\nimport { useQuery } from \"react-query\";\nimport { command } from \"./api\";\n\nvar CommandForm = function CommandForm() {\n  var _useQuery = useQuery(\"command\", command),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      isFetching = _useQuery.isFetching;\n\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: function onSubmit(e) {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    label: \"host\",\n    error: formik.errors.host,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, Object.assign({}, formik.getFieldProps(\"host\"), {\n    disabled: isFetching,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    pad: \"medium\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    label: \"SEND\",\n    type: \"submit\",\n    disabled: isFetching,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  })), error && /*#__PURE__*/React.createElement(Box, {\n    pad: \"medium\",\n    crolor: \"danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, error)));\n};\n\nexport default CommandForm;","map":{"version":3,"sources":["/app/src/Command/Form.jsx"],"names":["React","Box","Form","FormField","TextInput","useQuery","command","CommandForm","data","error","isFetching","e","formik","errors","host","getFieldProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,SAApB,EAA+BC,SAA/B,QAAgD,SAAhD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,kBACYF,QAAQ,CAAC,SAAD,EAAYC,OAAZ,CADpB;AAAA,MAChBE,IADgB,aAChBA,IADgB;AAAA,MACVC,KADU,aACVA,KADU;AAAA,MACHC,UADG,aACHA,UADG;;AAGxB,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAE,kBAACC,CAAD,EAAO,CAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAwB,IAAA,KAAK,EAAEC,MAAM,CAACC,MAAP,CAAcC,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD,oBAAeF,MAAM,CAACG,aAAP,CAAqB,MAArB,CAAf;AAA6C,IAAA,QAAQ,EAAEL,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,eAIE,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAqB,IAAA,IAAI,EAAC,QAA1B;AAAmC,IAAA,QAAQ,EAAEA,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,EAOGD,KAAK,iBACJ,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAC,QAAT;AAAkB,IAAA,MAAM,EAAC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KADH,CARJ,CADF,CADF;AAiBD,CApBD;;AAsBA,eAAeF,WAAf","sourcesContent":["import React from \"react\";\nimport { Box, Form, FormField, TextInput } from \"grommet\";\nimport { useQuery } from \"react-query\";\nimport { command } from \"./api\";\n\nconst CommandForm = () => {\n  const { data, error, isFetching } = useQuery(\"command\", command);\n\n  return (\n    <Box>\n      <Form onSubmit={(e) => {}}>\n        <FormField label=\"host\" error={formik.errors.host}>\n          <TextInput {...formik.getFieldProps(\"host\")} disabled={isFetching} />\n        </FormField>\n        <Box pad=\"medium\">\n          <Button label=\"SEND\" type=\"submit\" disabled={isFetching} />\n        </Box>\n        {error && (\n          <Box pad=\"medium\" crolor=\"danger\">\n            {error}\n          </Box>\n        )}\n      </Form>\n    </Box>\n  );\n};\n\nexport default CommandForm;\n"]},"metadata":{},"sourceType":"module"}