{"ast":null,"code":"import _toConsumableArray from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/app/src/Notification/Provider.jsx\";\n\nimport React from \"react\";\nimport NotificationContext from \"./context\";\nimport useNotifications from \"./use\";\nimport PropTypes from \"prop-types\";\nimport { Layer, Box, Text, Button } from \"grommet\";\nimport { StatusGood, StatusCritical, StatusWarning, StatusInfo, CloseForm } from \"grommet-icons\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nvar mapTypeToIcon = function mapTypeToIcon(type) {\n  switch (type) {\n    case \"success\":\n      return /*#__PURE__*/React.createElement(StatusGood, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 14\n        }\n      });\n\n    case \"error\":\n      return /*#__PURE__*/React.createElement(StatusCritical, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 14\n        }\n      });\n\n    case \"warning\":\n      return /*#__PURE__*/React.createElement(StatusWarning, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 14\n        }\n      });\n\n    case \"info\":\n    default:\n      return /*#__PURE__*/React.createElement(StatusInfo, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 14\n        }\n      });\n  }\n};\n\nvar mapTypeToColors = function mapTypeToColors(type) {\n  switch (type) {\n    case \"success\":\n      return [\"status-ok\", \"white\"];\n\n    case \"error\":\n      return [\"status-critical\", \"white\"];\n\n    case \"warning\":\n      return [\"status-warning\", \"white\"];\n\n    case \"info\":\n    default:\n      return [\"white\", \"brand\"];\n  }\n};\n\nvar Notification = function Notification(props) {\n  var _mapTypeToColors = mapTypeToColors(props.type),\n      _mapTypeToColors2 = _slicedToArray(_mapTypeToColors, 2),\n      bg = _mapTypeToColors2[0],\n      color = _mapTypeToColors2[1];\n\n  var icon = mapTypeToIcon(props.type);\n  return /*#__PURE__*/React.createElement(Box, {\n    gap: \"medium\",\n    direction: \"row\",\n    background: bg,\n    color: color,\n    pad: \"medium\",\n    align: \"center\",\n    fill: \"horizontal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, icon, /*#__PURE__*/React.createElement(Box, {\n    as: Text,\n    size: \"small\",\n    weight: \"bold\",\n    flex: true,\n    direction: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, props.message), /*#__PURE__*/React.createElement(Button, {\n    plain: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CloseForm, {\n    onClick: props.onClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })));\n};\n\nNotification.propTypes = {\n  status: PropTypes.oneOf([\"success\", \"error\", \"warning\", \"info\"]),\n  title: PropTypes.string,\n  onClose: PropTypes.func\n};\nNotification.propTypes = {\n  status: \"info\",\n  title: \"\",\n  onClose: function onClose(f) {\n    return f;\n  }\n};\n\nvar NotificationContainer = function NotificationContainer() {\n  var _useNotifications = useNotifications(),\n      notifications = _useNotifications.notifications,\n      closeNotification = _useNotifications.closeNotification,\n      closeAllNotifications = _useNotifications.closeAllNotifications;\n\n  var createCloseFn = React.useCallback(function (id) {\n    return function () {\n      return closeNotification(id);\n    };\n  }, [closeNotification]);\n  return /*#__PURE__*/React.createElement(Layer, {\n    position: \"bottom\",\n    modal: false // margin={{ vertical: \"medium\", horizontal: \"small\" }}\n    ,\n    responsive: false,\n    plain: true,\n    full: \"horizontal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, notifications.length > 4 && /*#__PURE__*/React.createElement(Box, {\n    direction: \"row\",\n    align: \"center\",\n    justify: \"flex-end\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    plain: true,\n    onClick: closeAllNotifications,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    size: \"xsmall\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"close all\"), \" \", /*#__PURE__*/React.createElement(CloseForm, {\n    size: \"xsmall\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 50\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    direction: \"column\",\n    gap: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, notifications.map(function (notification) {\n    return /*#__PURE__*/React.createElement(Box, {\n      animation: \"fadeIn\",\n      elevation: \"medium\",\n      key: notification.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Notification, Object.assign({}, notification, {\n      onClose: createCloseFn(notification.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    })));\n  })));\n};\n\nexport default (function (_ref) {\n  var children = _ref.children,\n      restProps = _objectWithoutProperties(_ref, [\"children\"]);\n\n  //   restProps\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      notifications = _React$useState2[0],\n      setNotifications = _React$useState2[1];\n\n  var showNotification = React.useCallback(function (message, type) {\n    var id = uuidv4();\n    var notification = {\n      message,\n      type,\n      id\n    };\n    setNotifications([].concat(_toConsumableArray(notifications), [notification]));\n    return id;\n  }, [notifications]);\n  var closeNotification = React.useCallback(function (id) {\n    setNotifications(notifications.filter(function (notification) {\n      return notification.id !== id;\n    }));\n  }, [notifications]);\n  var closeAllNotifications = React.useCallback(function () {\n    setNotifications([]);\n  }, []);\n  var ctx = {\n    notifications,\n    showNotification,\n    closeNotification,\n    closeAllNotifications\n  };\n  return /*#__PURE__*/React.createElement(NotificationContext.Provider, {\n    value: ctx,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NotificationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }), children);\n});","map":{"version":3,"sources":["/app/src/Notification/Provider.jsx"],"names":["React","NotificationContext","useNotifications","PropTypes","Layer","Box","Text","Button","StatusGood","StatusCritical","StatusWarning","StatusInfo","CloseForm","v4","uuidv4","mapTypeToIcon","type","mapTypeToColors","Notification","props","bg","color","icon","message","onClose","propTypes","status","oneOf","title","string","func","f","NotificationContainer","notifications","closeNotification","closeAllNotifications","createCloseFn","useCallback","id","length","map","notification","children","restProps","useState","setNotifications","showNotification","filter","ctx"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport NotificationContext from \"./context\";\nimport useNotifications from \"./use\";\nimport PropTypes from \"prop-types\";\nimport { Layer, Box, Text, Button } from \"grommet\";\nimport {\n  StatusGood,\n  StatusCritical,\n  StatusWarning,\n  StatusInfo,\n  CloseForm\n} from \"grommet-icons\";\nimport { v4 as uuidv4 } from \"uuid\";\nconst mapTypeToIcon = (type) => {\n  switch (type) {\n    case \"success\":\n      return <StatusGood />;\n    case \"error\":\n      return <StatusCritical />;\n    case \"warning\":\n      return <StatusWarning />;\n    case \"info\":\n    default:\n      return <StatusInfo />;\n  }\n};\n\nconst mapTypeToColors = (type) => {\n  switch (type) {\n    case \"success\":\n      return [\"status-ok\", \"white\"];\n    case \"error\":\n      return [\"status-critical\", \"white\"];\n    case \"warning\":\n      return [\"status-warning\", \"white\"];\n    case \"info\":\n    default:\n      return [\"white\", \"brand\"];\n  }\n};\n\nconst Notification = (props) => {\n  const [bg, color] = mapTypeToColors(props.type);\n  const icon = mapTypeToIcon(props.type);\n  return (\n    <Box\n      gap=\"medium\"\n      direction=\"row\"\n      background={bg}\n      color={color}\n      pad=\"medium\"\n      align=\"center\"\n      fill=\"horizontal\"\n    >\n      {icon}\n      <Box as={Text} size=\"small\" weight=\"bold\" flex direction=\"row\">\n        {props.message}\n      </Box>\n      <Button plain>\n        <CloseForm onClick={props.onClose} />\n      </Button>\n    </Box>\n  );\n};\n\nNotification.propTypes = {\n  status: PropTypes.oneOf([\"success\", \"error\", \"warning\", \"info\"]),\n  title: PropTypes.string,\n  onClose: PropTypes.func\n};\n\nNotification.propTypes = {\n  status: \"info\",\n  title: \"\",\n  onClose: (f) => f\n};\n\nconst NotificationContainer = () => {\n  const { notifications, closeNotification, closeAllNotifications } =\n    useNotifications();\n\n  const createCloseFn = React.useCallback(\n    (id) => () => closeNotification(id),\n    [closeNotification]\n  );\n\n  return (\n    <Layer\n      position=\"bottom\"\n      modal={false}\n      // margin={{ vertical: \"medium\", horizontal: \"small\" }}\n      responsive={false}\n      plain\n      full=\"horizontal\"\n    >\n      {notifications.length > 4 && (\n        <Box direction=\"row\" align=\"center\" justify=\"flex-end\">\n          <Button plain onClick={closeAllNotifications}>\n            <Text size=\"xsmall\">close all</Text> <CloseForm size=\"xsmall\" />\n          </Button>\n        </Box>\n      )}\n      <Box direction=\"column\" gap=\"small\">\n        {notifications.map((notification) => (\n          <Box animation=\"fadeIn\" elevation=\"medium\" key={notification.id}>\n            <Notification\n              {...notification}\n              onClose={createCloseFn(notification.id)}\n            />\n          </Box>\n        ))}\n      </Box>\n    </Layer>\n  );\n};\n\nexport default ({ children, ...restProps }) => {\n  //   restProps\n  const [notifications, setNotifications] = React.useState([]);\n\n  const showNotification = React.useCallback(\n    (message, type) => {\n      const id = uuidv4();\n      const notification = { message, type, id };\n      setNotifications([...notifications, notification]);\n      return id;\n    },\n    [notifications]\n  );\n\n  const closeNotification = React.useCallback(\n    (id) => {\n      setNotifications(\n        notifications.filter((notification) => notification.id !== id)\n      );\n    },\n    [notifications]\n  );\n\n  const closeAllNotifications = React.useCallback(() => {\n    setNotifications([]);\n  }, []);\n\n  const ctx = {\n    notifications,\n    showNotification,\n    closeNotification,\n    closeAllNotifications\n  };\n\n  return (\n    <NotificationContext.Provider value={ctx}>\n      <NotificationContainer />\n      {children}\n    </NotificationContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}