{"ast":null,"code":"import _regeneratorRuntime from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/app/src/Session/Form.jsx\";\n\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport { Box, TextInput, Select, FormField, Button, Grid } from \"grommet\";\nimport { create } from \"./api\";\nimport { useMutation } from \"react-query\";\nimport useNotifications from \"Notification/use\";\nvar gameOptions = Object.freeze([{\n  value: \"cstrike\",\n  label: \"Counter Strike 1.6\"\n}]);\n\nvar SessionForm = function SessionForm(_ref) {\n  var onSessionStart = _ref.onSessionStart;\n\n  // const { isLoading, error, data } = useQuery(\"repoData\", create(values));\n  var _useNotifications = useNotifications(),\n      showNotification = _useNotifications.showNotification;\n\n  var formik = useFormik({\n    initialValues: {\n      game: \"cstrike\",\n      host: null,\n      port: 27015,\n      password: null\n    },\n    validateOnChange: false,\n    validateOnBlur: false,\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n        var setSubmitting, result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setSubmitting = _ref2.setSubmitting;\n                setSubmitting(true);\n                _context.prev = 2;\n                _context.next = 5;\n                return create(values);\n\n              case 5:\n                result = _context.sent;\n                console.log(\"r\", result);\n                onSessionStart(result);\n                _context.next = 14;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](2);\n                console.log(_context.t0);\n                showNotification(_context.t0.message, \"error\");\n\n              case 14:\n                _context.prev = 14;\n                setSubmitting(false);\n                return _context.finish(14);\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 10, 14, 17]]);\n      }));\n\n      function onSubmit(_x, _x2) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  return /*#__PURE__*/React.createElement(Grid, {\n    rows: [\"flex\", \"auto\"],\n    as: \"form\",\n    onSubmit: formik.handleSubmit,\n    fill: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    flex: true,\n    overflow: \"auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    label: \"game\",\n    error: formik.errors.game,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, Object.assign({}, formik.getFieldProps(\"game\"), {\n    placeholder: \"Select\",\n    labelKey: \"label\",\n    valueKey: {\n      key: \"value\",\n      reduce: true\n    },\n    options: gameOptions,\n    disabled: formik.isSubmitting,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(FormField, {\n    label: \"host\",\n    error: formik.errors.host,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, Object.assign({}, formik.getFieldProps(\"host\"), {\n    disabled: formik.isSubmitting,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(FormField, {\n    label: \"port\",\n    error: formik.errors.port,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, Object.assign({}, formik.getFieldProps(\"port\"), {\n    disabled: formik.isSubmitting,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(FormField, {\n    label: \"password\",\n    error: formik.errors.password,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, Object.assign({\n    type: \"password\"\n  }, formik.getFieldProps(\"password\"), {\n    disabled: formik.isSubmitting,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }))))), /*#__PURE__*/React.createElement(Box, {\n    pad: \"medium\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    label: \"START\",\n    type: \"submit\",\n    disabled: formik.isSubmitting,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default SessionForm;","map":{"version":3,"sources":["/app/src/Session/Form.jsx"],"names":["React","useFormik","Box","TextInput","Select","FormField","Button","Grid","create","useMutation","useNotifications","gameOptions","Object","freeze","value","label","SessionForm","onSessionStart","showNotification","formik","initialValues","game","host","port","password","validateOnChange","validateOnBlur","onSubmit","values","setSubmitting","result","console","log","message","handleSubmit","errors","getFieldProps","key","reduce","isSubmitting"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\nimport { Box, TextInput, Select, FormField, Button, Grid } from \"grommet\";\nimport { create } from \"./api\";\nimport { useMutation } from \"react-query\";\nimport useNotifications from \"Notification/use\";\n\nconst gameOptions = Object.freeze([\n  { value: \"cstrike\", label: \"Counter Strike 1.6\" }\n]);\n\nconst SessionForm = ({ onSessionStart }) => {\n  // const { isLoading, error, data } = useQuery(\"repoData\", create(values));\n  const { showNotification } = useNotifications();\n  const formik = useFormik({\n    initialValues: {\n      game: \"cstrike\",\n      host: null,\n      port: 27015,\n      password: null\n    },\n    validateOnChange: false,\n    validateOnBlur: false,\n    onSubmit: async (values, { setSubmitting }) => {\n      setSubmitting(true);\n      try {\n        const result = await create(values);\n        console.log(\"r\", result);\n        onSessionStart(result);\n      } catch (e) {\n        console.log(e);\n        showNotification(e.message, \"error\");\n      } finally {\n        setSubmitting(false);\n      }\n    }\n  });\n\n  return (\n    <Grid rows={[\"flex\", \"auto\"]} as=\"form\" onSubmit={formik.handleSubmit} fill>\n      <Box flex overflow=\"auto\">\n        <Box>\n          <FormField label=\"game\" error={formik.errors.game}>\n            <Select\n              {...formik.getFieldProps(\"game\")}\n              placeholder=\"Select\"\n              labelKey=\"label\"\n              valueKey={{ key: \"value\", reduce: true }}\n              options={gameOptions}\n              disabled={formik.isSubmitting}\n            />\n          </FormField>\n          <FormField label=\"host\" error={formik.errors.host}>\n            <TextInput\n              {...formik.getFieldProps(\"host\")}\n              disabled={formik.isSubmitting}\n            />\n          </FormField>\n          <FormField label=\"port\" error={formik.errors.port}>\n            <TextInput\n              {...formik.getFieldProps(\"port\")}\n              disabled={formik.isSubmitting}\n            />\n          </FormField>\n          <FormField label=\"password\" error={formik.errors.password}>\n            <TextInput\n              type=\"password\"\n              {...formik.getFieldProps(\"password\")}\n              disabled={formik.isSubmitting}\n            />\n          </FormField>\n        </Box>\n      </Box>\n      <Box pad=\"medium\">\n        <Button label=\"START\" type=\"submit\" disabled={formik.isSubmitting} />\n      </Box>\n    </Grid>\n  );\n};\n\nexport default SessionForm;\n"]},"metadata":{},"sourceType":"module"}